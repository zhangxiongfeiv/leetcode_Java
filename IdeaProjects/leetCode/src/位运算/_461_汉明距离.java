package 位运算;

/*
两个整数之间的汉明距离指的是这两个数字对应二进制位不同的位置的数目。

        给出两个整数 x 和 y，计算它们之间的汉明距离。

        注意：
        0 ≤ x, y < 231.

        示例:

        输入: x = 1, y = 4

        输出: 2

        解释:
        1   (0 0 0 1)
        4   (0 1 0 0)

        上面的箭头指出了对应二进制位不同的位置。

        来源：力扣（LeetCode）
        链接：https://leetcode-cn.com/problems/hamming-distance
        著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/
public class _461_汉明距离 {

    // 对两个字符串进行异或运算，并统计结果为1的个数，那么这个数就是汉明距离。
    public int hammingDistance(int x, int y) {

        // 1   (0 0 0 1)
        // 4   (0 1 0 0)
        // 2 - 0 = 2;


        // 1   (0 0 0 1)
        // 9   (1 0 0 1)
        // 1

        // 1            (0 0 0 1)
        // 17       (1 0 0 0 0 1)
        // 1

        // 1            (0 0 0 1)
        // 16         (1 0 0 0 0)
        // 4


        // 2            (0 0 1 0)
        // 16         (1 0 0 0 0)
        // 2

        return Integer.bitCount(x ^ y);
    }

}
